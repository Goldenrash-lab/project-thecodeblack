{"mappings":"qgBAM4B,MAAtBA,EAAO,CACTC,YAAaC,SAASC,cAAc,iBACpCC,YAAaF,SAASC,cAAc,sBACpCE,iBAAkBH,SAASC,cAAc,sBACzCG,cAAeJ,SAASC,cAAc,wBACtCI,YAAaL,SAASC,cAAc,iBACpCK,aAAcN,SAASC,cAAc,mBACrCM,aAAcP,SAASC,cAAc,mBAInCO,EAAcC,aAAaC,QAAQ,WAKrB,SAAXC,EAAkBC,GAGvBC,QAAQC,IAAIF,EAAQG,KAAIC,GAGbC,MAFK,mDAAeD,KAGtBE,MAAKC,IACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,gBAACF,EAAqBG,UAEpC,OAACH,EAASI,MAAM,IAEzBC,OAAMC,IAEuB,MAD1BC,QAAQD,MAAM,iCAA4DA,GACpEA,CAAK,OAGlBP,MAAKS,IACWA,EAAaC,OAkHjB,GAAKC,OAAOC,YAAc,KACvChC,EAAKI,YAAY6B,UAAUC,IAAI,iBAlH3BC,EAAgBN,EAAaC,QAWC,SAAdM,GACxB,MAAMC,EAASD,EACVnB,KAAIqB,IACD,MAAMC,SAAEA,EAAQC,IAAEA,EAAGC,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,IAAEA,GAAQN,EAElD,MAAO,4CAA4CM,qFAG1CJ,iNAM2CC,6MAI1CF,kKAIAI,6HAKwBD,6gBAO9B,IAEPG,KAAK,IAEF7C,EAAKI,YAAY0C,UAAYT,C,CAhD7BU,CAAmBlB,GA8Dd,SAAQmB,GACrB,IAAIC,EAAa,EAEjBD,EAAW/B,KAAIqB,GACHW,GAAcX,EAAGI,QAGrB1C,EAAKS,aAAaqC,UAAY,uFAEFG,EAAWC,QAAQ,iB,CAtE/CC,CAAgBtB,GAChBD,QAAQwB,IAAIvB,EAAa,IAE5BH,OAAMC,IACHC,QAAQD,MAAM,kCAA8DA,EAAM,G,CA+C9C,SAAvCQ,EAAgBkB,GACG,IAApBA,IACArD,EAAKK,iBAAiB4B,UAAUqB,OAAO,mBACvCtD,EAAKM,cAAc2B,UAAUC,IAAI,oBAGrClC,EAAKC,YAAY6C,UAAY,SAASO,I,CAlF1CxC,EADqB0C,KAAKC,MAAM9C,IA+IhCV,EAAKI,YAAYqD,iBAAiB,SA1CF,SAANC,GACtB,MAAMC,EAAMD,EAAME,OAAOC,QAAQ,iBACjC,IAAKF,EACD,OAEJ,MACMzC,EADUyC,EAAIG,cACMC,aAAa,kBAEvCJ,EAAIG,cAAcR,SAciC,SAA3BU,GACxB,MAAMC,EAActD,aAAaC,QAAQ,WACnCsD,EAAeX,KAAKC,MAAMS,GAChCrC,QAAQwB,IAAIc,GAEZ,MAAMC,EAAiBD,EAAaE,QAAOC,GAAMA,IAAOL,IACxDrD,aAAa2D,QAAQ,UAAWf,KAAKgB,UAAUJ,IAC/ChC,EAAgBgC,EAAerC,QAE/BjB,EAAkBsD,E,CArBlBK,CAAmBtD,E,IAiCvBlB,EAAKQ,aAAaiD,iBAAiB,SA7BM,WACrCzD,EAAKC,YAAY6C,UAAY,WAC7B9C,EAAKK,iBAAiB4B,UAAUqB,OAAO,mBACvCtD,EAAKM,cAAcwC,UAAY,GAC/BnC,aAAa2D,QAAQ,UAAWf,KAAKgB,UAAU,I","sources":["src/js/cart.js"],"sourcesContent":["import '../../node_modules/modern-normalize/modern-normalize.css';\nimport './templates/footer-validation';\nimport './templates/footer-postApi';\nimport './templates/addToCart';\n\n// Связываем элементы и переменные\nconst refs = {\n    cartHeading: document.querySelector('#cart-heading'),\n    productList: document.querySelector('#cart-product-list'),\n    warningContainer: document.querySelector('#warning-container'),\n    baseContainer: document.querySelector('#cart-base-container'),\n    closeButton: document.querySelector('.close-button'),\n    deleteAllBtn: document.querySelector('#button-wrapper'),\n    totalWrapper: document.querySelector('#total-wrapper'),\n};\n\n//достаём данные из local storage\nconst cartIdsData = localStorage.getItem('cartIds');\nconst cartIdsArray = JSON.parse(cartIdsData);\nfetchCartProducts(cartIdsArray);\n\n//функция запроса данных\nfunction fetchCartProducts(cartIds) {\n    const BASE_URL = 'https://food-boutique.b.goit.study/api/products';\n\n    Promise.all(cartIds.map(productId => {\n        const url = `${BASE_URL}/${productId}`;\n\n        return fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`Ошибка HTTP: ${response.status}`);\n                }\n                return response.json();\n            })\n            .catch(error => {\n                console.error('Ошибка при выполнении запроса:', error);\n                throw error;\n            });\n    }))\n        .then(productsData => {\n            scrollAdding(productsData.length);\n            cartLargeNumber(productsData.length);\n            renderProductsCart(productsData);\n            countTotalPrice(productsData);\n            console.log(productsData)\n        })\n        .catch(error => {\n            console.error('Ошибка при выполнении запросов:', error);\n        });\n}\n\n// Создаем шаблон элемента и выводим его на страницу\nfunction renderProductsCart(products) {\n    const markup = products\n        .map(el => {\n            const { category, img, name, price, size, _id } = el;\n\n            return `<li class=\"product-item\" data-productId=\"${_id}\">\n            <img\n              class=\"product-item-img\"\n              src=\"${img}\"\n              alt=\"\"\n            />\n\n            <div class=\"product-item-content\">\n              <div class=\"characteristic-wrapper\">\n                <h3 class=\"product-item-heading product-bold\">${name}</h3>\n                <div class=\"charactetistic-text-container\">\n                  <span class=\"product-item-text\">\n                    <span class=\"key-span\">Category:</span>\n                    ${category}\n                  </span>\n                  <span class=\"product-item-text\">\n                    <span class=\"key-span\">Size:</span>\n                    ${size}\n                  </span>\n                </div>\n              </div>\n\n              <p class=\"product-price\">&#36;${price}</p>\n            </div>\n            <button type=\"button\" class=\"close-button product-bold\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"close-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 12 12\" fill=\"none\">\n                    <path d=\"M11.0625 2.11488L9.88512 0.9375L6 4.82262L2.11488 0.9375L0.9375 2.11488L4.82262 6L0.9375 9.88512L2.11488 11.0625L6 7.17738L9.88512 11.0625L11.0625 9.88512L7.17738 6L11.0625 2.11488Z\" fill=\"#010101\"/>\n                </svg>\n              </button>\n          </li>`;\n        })\n        .join('');\n\n    return (refs.productList.innerHTML = markup);\n}\n\n// функция для вывода данных в счетчик в заголовке страницы\nfunction cartLargeNumber(cartLargeNumber) {\n    if (cartLargeNumber === 0) {\n        refs.warningContainer.classList.remove('visually-hidden');\n        refs.baseContainer.classList.add('visually-hidden');\n    }\n\n    refs.cartHeading.innerHTML = `CART (${cartLargeNumber})`;\n}\n\n// подсчет общей суммы\nfunction countTotalPrice(priceArray) {\n    let totalPrice = 0;\n\n    priceArray.map(el => {\n        return (totalPrice += el.price);\n    });\n\n    return (refs.totalWrapper.innerHTML = `\n        <span class=\"key-span\">Sum:</span>\n        <span class=\"price-text\">&#36;${totalPrice.toFixed(2)}</span>\n    `);\n}\n\n// функция для удаления одного элемента\nfunction clickDeleteElBtn(event) {\n    const btn = event.target.closest('.close-button');\n    if (!btn) {\n        return;\n    }\n    const element = btn.parentElement;\n    const productId = element.getAttribute('data-productid');\n\n    btn.parentElement.remove();\n\n    updateLocalStorage(productId);\n}\n\n//Удаляем все элементы списка по нажатию на кнопку Delete All\nfunction clickDeleteAllBtn() {\n    refs.cartHeading.innerHTML = 'CART (0)';\n    refs.warningContainer.classList.remove('visually-hidden');\n    refs.baseContainer.innerHTML = '';\n    localStorage.setItem('cartIds', JSON.stringify([]));\n}\n\n// дополнительная функция для обновления local storage после удаления элемента\nfunction updateLocalStorage(elementToRemove) {\n    const cartIdsData = localStorage.getItem('cartIds');\n    const cartIdsArray = JSON.parse(cartIdsData);\n    console.log(cartIdsArray)\n\n    const updatedCartIds = cartIdsArray.filter(id => id !== elementToRemove);\n    localStorage.setItem('cartIds', JSON.stringify(updatedCartIds));\n    cartLargeNumber(updatedCartIds.length);\n\n    fetchCartProducts(updatedCartIds);\n}\n\n// Добавляем скролл, когда 3 элемента и больше\nfunction scrollAdding(listLength) {\n    if (listLength > 3 && window.innerWidth >= 768) {\n        refs.productList.classList.add('scroll-adding');\n    }\n}\n\n// Добавляем слушателей событий на список и на кнопку полного удаления\nrefs.productList.addEventListener('click', clickDeleteElBtn);\nrefs.deleteAllBtn.addEventListener('click', clickDeleteAllBtn);\n"],"names":["$915de8ffc4dd3149$var$refs","cartHeading","document","querySelector","productList","warningContainer","baseContainer","closeButton","deleteAllBtn","totalWrapper","$915de8ffc4dd3149$var$cartIdsData","localStorage","getItem","$915de8ffc4dd3149$var$fetchCartProducts","cartIds","Promise","all","map","productId","fetch","then","response","ok","Error","status","json","catch","error","console","productsData","length","window","innerWidth","classList","add","$915de8ffc4dd3149$var$cartLargeNumber","products","markup","el","category","img","name","price","size","_id","join","innerHTML","$915de8ffc4dd3149$var$renderProductsCart","priceArray","totalPrice","toFixed","$915de8ffc4dd3149$var$countTotalPrice","log","cartLargeNumber1","remove","JSON","parse","addEventListener","event","btn","target","closest","parentElement","getAttribute","elementToRemove","cartIdsData1","cartIdsArray1","updatedCartIds","filter","id","setItem","stringify","$915de8ffc4dd3149$var$updateLocalStorage"],"version":3,"file":"cart.18571c59.js.map"}