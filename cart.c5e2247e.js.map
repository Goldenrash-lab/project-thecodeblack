{"mappings":"sgBAK4B,IAAtBA,EAAO,CACTC,YAAaC,SAASC,cAAc,iBACpCC,YAAaF,SAASC,cAAc,sBACpCE,iBAAkBH,SAASC,cAAc,sBACzCG,cAAeJ,SAASC,cAAc,wBACtCI,YAAaL,SAASC,cAAc,iBACpCK,aAAcN,SAASC,cAAc,mBACrCM,aAAcP,SAASC,cAAc,mBAInCO,EAAcC,aAAaC,QAAQ,WAKrB,SAAXC,EAAkBC,GAGvBC,QAAQC,IAAIF,EAAQG,KAAI,SAAAC,GACpB,IAAMC,EAAM,GAAeC,OAHd,kDAGW,KAAaA,OAAVF,GAE3B,OAAOG,MAAMF,GACRG,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAM,gBAAsCL,OAAhBG,EAASG,SAE7C,OAACH,EAASI,M,IAEnBC,OAAM,SAAAC,GAEuB,MAD1BC,QAAQD,MAAM,iCAA4DA,GACpEA,C,QAGbP,MAAK,SAAAS,GAkHqB,IApGzBC,EAoDFC,EAjEiBF,EAAaG,OAkHjB,GAAKC,OAAOC,YAAc,KACvCpC,EAAKI,YAAYiC,UAAUC,IAAI,iBAlH3BC,EAAgBR,EAAaG,QAY/BF,EAXqBD,EAYtBd,KAAI,SAAAuB,GACD,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,IAAKC,EAA2BH,EAA3BG,KAAMC,EAAqBJ,EAArBI,MAAOC,EAAcL,EAAdK,KAAMC,EAAQN,EAARM,IAE1C,MAAO,4CAGE1B,OAH0C0B,EAAI,qFASH1B,OAN3CsB,EAAI,iNAUHtB,OAJ0CuB,EAAK,6MAQ/CvB,OAJAqB,EAAS,kKASerB,OALxByB,EAAK,6HAKyBzB,OAANwB,EAAM,6gB,IAS3CG,KAAK,IAEF/C,EAAKI,YAAY4C,UAAYhB,EAejCC,EAAa,EA9DOF,EAgEbd,KAAI,SAAAuB,GACX,OAAQP,GAAcO,EAAGI,K,IAGrB5C,EAAKS,aAAauC,UAAY,uFAEoB5B,OAAtBa,EAAWgB,QAAQ,GAAG,iBArElDnB,QAAQoB,IAAInB,E,IAEfH,OAAM,SAAAC,GACHC,QAAQD,MAAM,kCAA8DA,E,IA+CxC,SAAvCU,EAAgBY,GACG,IAApBA,IACAnD,EAAKK,iBAAiBgC,UAAUe,OAAO,mBACvCpD,EAAKM,cAAc+B,UAAUC,IAAI,oBAGrCtC,EAAKC,YAAY+C,UAAY,SAAyB5B,OAAhB+B,EAAgB,I,CAlF1DtC,EADqBwC,KAAKC,MAAM5C,IA+IhCV,EAAKI,YAAYmD,iBAAiB,SA1CF,SAANC,GACtB,IAAMC,EAAMD,EAAME,OAAOC,QAAQ,iBACjC,GAAKF,EAAL,CAGA,IACMvC,EADUuC,EAAIG,cACMC,aAAa,kBAEvCJ,EAAIG,cAAcR,SAciC,SAA3BU,GACxB,IAAMC,EAAcpD,aAAaC,QAAQ,WACnCoD,EAAeX,KAAKC,MAAMS,GAChCjC,QAAQoB,IAAIc,GAEZ,IAAMC,EAAiBD,EAAaE,QAAO,SAAAC,G,OAAMA,IAAOL,C,IACxDnD,aAAayD,QAAQ,UAAWf,KAAKgB,UAAUJ,IAC/C1B,EAAgB0B,EAAe/B,QAE/BrB,EAAkBoD,E,CArBlBK,CAAmBpD,EAPf,C,IAwCRlB,EAAKQ,aAAa+C,iBAAiB,SA7BM,WACrCvD,EAAKC,YAAY+C,UAAY,WAC7BhD,EAAKK,iBAAiBgC,UAAUe,OAAO,mBACvCpD,EAAKM,cAAc0C,UAAY,GAC/BrC,aAAayD,QAAQ,UAAWf,KAAKgB,UAAU,I","sources":["src/js/cart.js"],"sourcesContent":["import '../../node_modules/modern-normalize/modern-normalize.css';\nimport './templates/footer-validation';\nimport './templates/footer-postApi';\n\n// Связываем элементы и переменные\nconst refs = {\n    cartHeading: document.querySelector('#cart-heading'),\n    productList: document.querySelector('#cart-product-list'),\n    warningContainer: document.querySelector('#warning-container'),\n    baseContainer: document.querySelector('#cart-base-container'),\n    closeButton: document.querySelector('.close-button'),\n    deleteAllBtn: document.querySelector('#button-wrapper'),\n    totalWrapper: document.querySelector('#total-wrapper'),\n};\n\n//достаём данные из local storage\nconst cartIdsData = localStorage.getItem('cartIds');\nconst cartIdsArray = JSON.parse(cartIdsData);\nfetchCartProducts(cartIdsArray);\n\n//функция запроса данных\nfunction fetchCartProducts(cartIds) {\n    const BASE_URL = 'https://food-boutique.b.goit.study/api/products';\n\n    Promise.all(cartIds.map(productId => {\n        const url = `${BASE_URL}/${productId}`;\n\n        return fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`Ошибка HTTP: ${response.status}`);\n                }\n                return response.json();\n            })\n            .catch(error => {\n                console.error('Ошибка при выполнении запроса:', error);\n                throw error;\n            });\n    }))\n        .then(productsData => {\n            scrollAdding(productsData.length);\n            cartLargeNumber(productsData.length);\n            renderProductsCart(productsData);\n            countTotalPrice(productsData);\n            console.log(productsData)\n        })\n        .catch(error => {\n            console.error('Ошибка при выполнении запросов:', error);\n        });\n}\n\n// Создаем шаблон элемента и выводим его на страницу\nfunction renderProductsCart(products) {\n    const markup = products\n        .map(el => {\n            const { category, img, name, price, size, _id } = el;\n\n            return `<li class=\"product-item\" data-productId=\"${_id}\">\n            <img\n              class=\"product-item-img\"\n              src=\"${img}\"\n              alt=\"\"\n            />\n\n            <div class=\"product-item-content\">\n              <div class=\"characteristic-wrapper\">\n                <h3 class=\"product-item-heading product-bold\">${name}</h3>\n                <div class=\"charactetistic-text-container\">\n                  <span class=\"product-item-text\">\n                    <span class=\"key-span\">Category:</span>\n                    ${category}\n                  </span>\n                  <span class=\"product-item-text\">\n                    <span class=\"key-span\">Size:</span>\n                    ${size}\n                  </span>\n                </div>\n              </div>\n\n              <p class=\"product-price\">&#36;${price}</p>\n            </div>\n            <button type=\"button\" class=\"close-button product-bold\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"close-icon\" width=\"16\" height=\"16\" viewBox=\"0 0 12 12\" fill=\"none\">\n                    <path d=\"M11.0625 2.11488L9.88512 0.9375L6 4.82262L2.11488 0.9375L0.9375 2.11488L4.82262 6L0.9375 9.88512L2.11488 11.0625L6 7.17738L9.88512 11.0625L11.0625 9.88512L7.17738 6L11.0625 2.11488Z\" fill=\"#010101\"/>\n                </svg>\n              </button>\n          </li>`;\n        })\n        .join('');\n\n    return (refs.productList.innerHTML = markup);\n}\n\n// функция для вывода данных в счетчик в заголовке страницы\nfunction cartLargeNumber(cartLargeNumber) {\n    if (cartLargeNumber === 0) {\n        refs.warningContainer.classList.remove('visually-hidden');\n        refs.baseContainer.classList.add('visually-hidden');\n    }\n\n    refs.cartHeading.innerHTML = `CART (${cartLargeNumber})`;\n}\n\n// подсчет общей суммы\nfunction countTotalPrice(priceArray) {\n    let totalPrice = 0;\n\n    priceArray.map(el => {\n        return (totalPrice += el.price);\n    });\n\n    return (refs.totalWrapper.innerHTML = `\n        <span class=\"key-span\">Sum:</span>\n        <span class=\"price-text\">&#36;${totalPrice.toFixed(2)}</span>\n    `);\n}\n\n// функция для удаления одного элемента\nfunction clickDeleteElBtn(event) {\n    const btn = event.target.closest('.close-button');\n    if (!btn) {\n        return;\n    }\n    const element = btn.parentElement;\n    const productId = element.getAttribute('data-productid');\n\n    btn.parentElement.remove();\n\n    updateLocalStorage(productId);\n}\n\n//Удаляем все элементы списка по нажатию на кнопку Delete All\nfunction clickDeleteAllBtn() {\n    refs.cartHeading.innerHTML = 'CART (0)';\n    refs.warningContainer.classList.remove('visually-hidden');\n    refs.baseContainer.innerHTML = '';\n    localStorage.setItem('cartIds', JSON.stringify([]));\n}\n\n// дополнительная функция для обновления local storage после удаления элемента\nfunction updateLocalStorage(elementToRemove) {\n    const cartIdsData = localStorage.getItem('cartIds');\n    const cartIdsArray = JSON.parse(cartIdsData);\n    console.log(cartIdsArray)\n\n    const updatedCartIds = cartIdsArray.filter(id => id !== elementToRemove);\n    localStorage.setItem('cartIds', JSON.stringify(updatedCartIds));\n    cartLargeNumber(updatedCartIds.length);\n\n    fetchCartProducts(updatedCartIds);\n}\n\n// Добавляем скролл, когда 3 элемента и больше\nfunction scrollAdding(listLength) {\n    if (listLength > 3 && window.innerWidth >= 768) {\n        refs.productList.classList.add('scroll-adding');\n    }\n}\n\n// Добавляем слушателей событий на список и на кнопку полного удаления\nrefs.productList.addEventListener('click', clickDeleteElBtn);\nrefs.deleteAllBtn.addEventListener('click', clickDeleteAllBtn);\n"],"names":["$ce375e1befa17f1c$var$refs","cartHeading","document","querySelector","productList","warningContainer","baseContainer","closeButton","deleteAllBtn","totalWrapper","$ce375e1befa17f1c$var$cartIdsData","localStorage","getItem","$ce375e1befa17f1c$var$fetchCartProducts","cartIds","Promise","all","map","productId","url","concat","fetch","then","response","ok","Error","status","json","catch","error","console","productsData","markup","totalPrice","length","window","innerWidth","classList","add","$ce375e1befa17f1c$var$cartLargeNumber","el","category","img","name","price","size","_id","join","innerHTML","toFixed","log","cartLargeNumber1","remove","JSON","parse","addEventListener","event","btn","target","closest","parentElement","getAttribute","elementToRemove","cartIdsData1","cartIdsArray1","updatedCartIds","filter","id","setItem","stringify","$ce375e1befa17f1c$var$updateLocalStorage"],"version":3,"file":"cart.c5e2247e.js.map"}